if (Boolean.valueOf(rootProject.ext.isModule)) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
//        applicationId "com.ivor.module001"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

//    //java插件引入了一个概念叫做SourceSets，通过修改SourceSets中的属性，可以指定哪些源文件
//    //（ 或文件夹下的源文件 ） 要被编译 ， 哪些源文件要被排除 。
    sourceSets {
        main {
            if (Boolean.valueOf(rootProject.ext.isModule)) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除java/debug文件夹下的所有文件
                    exclude 'debug/**'
                }
            }
        }
    }
}

dependencies {

    api fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(path: ':moduleItem:modulebase')
    implementation project(path: ':moduleItem:modulecommon')

    kapt rootProject.ext.annotationProcessor["arouter"]
}